<?php
/**
 * @file
 * Code for the kreol_campaign feature.
 */

include_once 'kreol_campaign.features.inc';

/**
 * Implements hook_preprocess_entity().
 */
function kreol_campaign_preprocess_entity(&$variables) {
  if ('paragraphs_item' === $variables['entity_type']) {
    if ('campaign_audio_book' === $variables['paragraphs_item']->bundle()
				|| 'campaign_material' === $variables['paragraphs_item']->bundle()) {
      $ting_entity = NULL;

      $variables['cover'] =
        $variables['author'] =
        $variables['title'] = array();

      $wrapper = $variables['paragraphs_item']->wrapper();
      $url = $wrapper->field_material_url->value();
      $ting_entity = _reol_base_object_from_url($url);

      if ($ting_entity) {
        drupal_add_js('https://play.pubhub.dk/1.1.4/js/player-kernel.min.js', 'external');
        drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/bowser/1.7.2/bowser.min.js', 'external');
        drupal_add_js(drupal_get_path('module', 'kreol_campaign') . '/js/audio_book.js');

        if ('campaign_audio_book' === $variables['paragraphs_item']->bundle()) {
          $ting_entity->reol_no_icons = TRUE;
        }
        $build = ting_object_view($ting_entity, 'compact');
        // For some reason this is an array.
				$stuff = $ting_entity->getIsbn();
        $isbn = reset($stuff);
				$stuff = $ting_entity->getCreators();
        $author = reset($stuff);
        $variables['isbn'] = $isbn;
        $variables['cover'] = $build['ting_cover'];
        $variables['author'] = check_plain($author);
        $variables['title'] = check_plain($ting_entity->getTitle());
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function kreol_campaign_form_alter(&$form, &$form_state, $form_id) {
  if ('kreol_campaign_node_form' === $form_id) {
    if (isset($form['field_geofencing_origin'])) {
      $form['field_geofencing_origin']['#states'] = [
        'visible' => [
          'select[id="edit-field-campaign-add-on-und"]' => ['value' => 'geofencing'],
        ],
        'required' => [
          'select[id="edit-field-campaign-add-on-und"]' => ['value' => 'geofencing'],
        ],
      ];
      $form['field_geofencing_max_distance']['#states'] = $form['field_geofencing_origin']['#states'];
    }
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function kreol_campaign_paragraphs_field_widget_form_alter(&$element, &$form_state, $context) {
  if (isset($element['#bundle']) && 'campaign_audio_book' === $element['#bundle']) {
    // $element['field_material_url'][LANGUAGE_NONE][0]['value']['#autocomplete_path'] = 'kreol/autocomplete/material.url';
  }
}

/**
 * Implements hook_panels_pane_content_alter().
 */
function kreol_campaign_panels_pane_content_alter($content, $pane, $args, $contexts) {
}

/**
 * Implements hook_menu().
 */
function kreol_campaign_menu()
{
  $items['kreol/autocomplete/%'] = [
    'page callback' => 'kreol_autocomplete',
    'page arguments' => [2],
    'access arguments' => ['access content'],
  ];

  return $items;
}

function kreol_autocomplete($type, $query) {
  $url = url('https://itk:itk@stg.ereolen.dk/widget/search', ['query' => ['query' => $query]]);
  $response = drupal_http_request($url);
  $items = json_decode($response->data)->data;
  $data = [];
  if ($items) {
    foreach ($items as $item) {
      $data[$item->url] = implode('<br/>', [$item->id, $item->title, implode(', ', $item->creators)]);
    }
  }

  drupal_json_output($data);
}
